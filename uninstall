#!/bin/bash
#     _   _                             _
#    / \ | |_ _ __ ___   ___  ___ _ __ | |__   ___ _ __ ___
#   / _ \| __| '_ ` _ \ / _ \/ __| '_ \| '_ \ / _ \ '__/ _ \
#  / ___ \ |_| | | | | | (_) \__ \ |_) | | | |  __/ | |  __/
# /_/   \_\__|_| |_| |_|\___/|___/ .__/|_| |_|\___|_|  \___|
#                                |_|
# uninstall/backup script for Linux

# initializes the directories to clean and stores them to an array
ATMOSPHERE_PACKAGE_NAME="com.musala.atmosphere"
GRADLE_CACHES_DIR=".gradle/caches"
ATMOSPHERE_MAVEN_LOCAL=".m2/repository/com/musala/atmosphere"
ARRAY=(~/$ATMOSPHERE_MAVEN_LOCAL)
ARRAY+=(`find ~/$GRADLE_CACHES_DIR -name $ATMOSPHERE_PACKAGE_NAME`)

# initializes some util variables
BACKUP_OPTION="-b"
HELP_OPTION="-h"
UNINSTALL_OPTION="-u"
LOG_FILE="./`basename $0`.log"
TIMESTAMP="date +%Y-%m-%d-%H-%M-%S"

function printUsage {
    echo "
Usage: `basename $0`, `basename $0` [-h], `basename $0` [-b], `basename $0` [-u]
where
    -h  show the help
    -b  remomove and backup the Atmospgere packages
    -u uninstall the Atmospgere packages. Default option"
    exit 0
}

# interrupts the script due incorrect options
if [ "$2" != "" ]; then
    echo "[ERROR] Only one option is allowed."
    printUsage
	exit 1
fi
if [ "$1" != "$HELP_OPTION" ] && [ "$1" != "$BACKUP_OPTION" ] && [ "$1" != "$UNINSTALL_OPTION" ]; then
    echo "[ERROR] Unexpected option: $1"
    printUsage
    exit 1
fi

# shows the help
if [ "$1" == "$HELP_OPTION" ]; then
    printUsage
fi

# creates a log file if not exists
touch $LOG_FILE
echo -e "\n*******************\n`$TIMESTAMP`\n*******************\n" |& tee -a $LOG_FILE

# removes the Atmosphere components from the User Home directory
for DIRECTORY in "${ARRAY[@]}"
do
    if [ -d $DIRECTORY ];then
        if [ "$1" != "$BACKUP_OPTION" ]; then
            rm -rfv $DIRECTORY |& tee -a $LOG_FILE
	        printLog "[INFO] The \"$DIRECTORY\" directory is removed successfully."
	else
        mv $DIRECTORY "$DIRECTORY-`$TIMESTAMP`.bak" |& tee -a $LOG_FILE
	    printLog "[INFO] The \"$DIRECTORY\" is successfully backed up."
	fi
    else
        printLog "[INFO] The \"$DIRECTORY\" directory does not exists. Nothing to remove/backup."
    fi
done

printLog "DONE"

# prints and logs the argument
function printLog {
	echo $1 |& tee -a $LOG_FILE
}
